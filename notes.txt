<> Η είσοδος (input) που θα δέχεται το πρόγραμμα θα είναι ένα λεξικό της μορφής

{
	node_1: [neighbor_1, ..., neighbor_j],
	.
	.
	.
	node_i: [neighbor_1, ..., neighbor_j],
	.
	.
	.
	node_n: [neighbor_1, ..., neighbor_j]
}

όπου node_i (1<=i<=n) αντιστοιχεί σε έναν από τους n κόμβους του γράφου και neighbor_j (1<=j<n) οι γειτονικοί κόμβοι του node_i.

<> Θα έχω μια συμβολοσειρά μήκους 16, ώπου θα παίρνει τις τιμές B, R, G, Y (Blue, Red, Green, Yellow).

<> Για την επιλογή των γονέων μάλλον είναι καλύτερα να επιλέξω την διαδικασία "επιλογής τουρνουά".

<> ΕΛΕΓΧΩ ΤΗ ΔΙΑΔΙΚΑΣΙΑ ΤΟΥΡΝΟΥΑ (cumulative_probality_distribution).

<> Συνθήκες τερματισμού:
	- Αν φτάσω σε ένα μεγάλο σκορ που με ικανοποιεί.
	- Αν συγκλίνει ο πληθυσμός, δηλαδή τα γονίδια να αρχίζουν να μοιάζουν μεταξύ τους.
	- Βάζω ένα ανώτατο όριο για αποφυγής μη τερματισμού του προγράμματος.